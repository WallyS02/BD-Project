-- 1. Wypisz zespół który najczęściej pojawia się w playlistach
SELECT TOP 1 NAZWA, COUNT(PLAYLISTA_UTWOR.ID_U) AS [LICZBA UTWORÓW W PLAYLISTACH] FROM
ZESPOL INNER JOIN (
    ALBUM INNER JOIN
        (UTWOR INNER JOIN PLAYLISTA_UTWOR ON UTWOR.ID_UTWORU = PLAYLISTA_UTWOR.ID_U)
            ON UTWOR.ID_A = ALBUM.ID_ALBUMU)
                ON ZESPOL.ID_ZESPOLU = ALBUM.NAZWA_Z
GROUP BY ZESPOL.NAZWA ORDER BY [LICZBA UTWORÓW W PLAYLISTACH] DESC

-- 2. Wypisz wszyskie zespoły, które nie wydały żadnego albumu i mają więcej niż 2 członków
SELECT ZESPOL.NAZWA, COUNT(ARTYSTA.ID) AS [LICZBA ARTYSTOW] FROM
ZESPOL INNER JOIN ARTYSTA ON ZESPOL.ID_ZESPOLU = ARTYSTA.ID_Z
        WHERE NOT EXISTS(SELECT * FROM ALBUM WHERE ZESPOL.ID_ZESPOLU = ALBUM.NAZWA_Z)
GROUP BY ZESPOL.NAZWA HAVING COUNT(ARTYSTA.ID) > 2

-- 3. Wypisz najkrótsze długości i producentów albumów dla każdego gatunku, które powstały w naszym wieku
SELECT GATUNEK.NAZWA, MIN(ALBUM.DLUGOSC) AS [NAJKROTSZY ALBUM], MIN(PRODUCENT.NAZWA) AS PRODUCENT FROM
    GATUNEK INNER JOIN (ALBUM INNER JOIN PRODUCENT ON ALBUM.NAZWA_P = PRODUCENT.NAZWA)
        ON GATUNEK.NAZWA = ALBUM.NAZWA_G
        AND GATUNEK.DATA_POWSTANIA > '2000-01-01'
GROUP BY GATUNEK.NAZWA

-- 4. Wypisz wszystkich artystów grających na gitarze, którzy stworzyli album samodzielnie
SELECT IMIE, NAZWISKO FROM ALBUM INNER JOIN
    (ARTYSTA INNER JOIN
        (ARTYSTA_INSTRUMENT INNER JOIN INSTRUMENT ON ARTYSTA_INSTRUMENT.NAZWA = INSTRUMENT.NAZWA
            AND INSTRUMENT.NAZWA LIKE 'Gitara%')
                ON ARTYSTA.ID = ARTYSTA_INSTRUMENT.ID_A)
                    ON ARTYSTA.ID = ALBUM.NAZWA_A

/* 5. Wypisz wszystkie utwory z albumów wydanych w XX wieku, mające długość większą niż średnia długość utworów
i numer w albumie niższy niż średnia numerów w albumie utworów*/
SELECT UTWOR.TYTUL FROM UTWOR
        INNER JOIN ALBUM ON ALBUM.ID_ALBUMU = UTWOR.ID_A AND ALBUM.DATA_WYDANIA BETWEEN '1900-01-01' AND '2000-01-01'
             WHERE UTWOR.DLUGOSC > (SELECT CAST(DATEADD( ms, AVG(DATEDIFF( ms, '00:00:00', DLUGOSC)), '00:00:00' ) AS TIME) FROM UTWOR)
               AND NUMER_W_ALBUMIE < (SELECT AVG(NUMER_W_ALBUMIE) FROM UTWOR)

-- 6. Widok z ilością odtworzeń dla każdego utworu
CREATE VIEW [ODTWORZENIA UTWOROW] (ID, [ILOSC ODTWORZEN], TYTUL) AS
SELECT ID_UTWORU, COUNT(ODTWORZENIE.ID_ODTWORZENIA), MAX(UTWOR.TYTUL) FROM
    ODTWORZENIE INNER JOIN UTWOR ON UTWOR.ID_UTWORU = ODTWORZENIE.ID_U
        GROUP BY ID_UTWORU

DROP VIEW [ODTWORZENIA UTWOROW]

-- Wypisz nabardziej odtwarzany zespół za pomocą widoku [ODTWORZENIA UTWOROW]
SELECT TOP 1 NAZWA, SUM([ILOSC ODTWORZEN]) AS [ILOSC ODTWORZEN ZESPOLU] FROM
        ZESPOL INNER JOIN
            (ALBUM INNER JOIN
                (UTWOR INNER JOIN [ODTWORZENIA UTWOROW] on UTWOR.ID_UTWORU = [ODTWORZENIA UTWOROW].ID)
                    ON ALBUM.ID_ALBUMU = UTWOR.ID_A)
                        ON ZESPOL.ID_ZESPOLU = ALBUM.NAZWA_Z
GROUP BY NAZWA ORDER BY [ILOSC ODTWORZEN ZESPOLU] DESC

/* 7. Zaprezentuj porównanie łącznej ilości odtworzeń z 2023 roku utworów pochodzących z XX wieku oraz
   utworów pochodzących z obecnego wieku*/

CREATE VIEW [ODTWORZENIA XX WIEKU] (WIEK, ILOSC) AS
SELECT 'XX wiek', COUNT(ODTWORZENIE.ID_ODTWORZENIA) FROM
    ODTWORZENIE INNER JOIN (UTWOR INNER JOIN ALBUM ON UTWOR.ID_A = ALBUM.ID_ALBUMU)
        ON ODTWORZENIE.ID_U = UTWOR.ID_UTWORU
            WHERE YEAR(ODTWORZENIE.DATA) = 2023 AND ALBUM.DATA_WYDANIA BETWEEN '1900-01-01' AND '2000-01-01'

CREATE VIEW [ODTWORZENIA XXI WIEKU] (WIEK, ILOSC) AS
SELECT 'XXI wiek', COUNT(ODTWORZENIE.ID_ODTWORZENIA) FROM
    ODTWORZENIE INNER JOIN (UTWOR INNER JOIN ALBUM ON UTWOR.ID_A = ALBUM.ID_ALBUMU)
        ON ODTWORZENIE.ID_U = UTWOR.ID_UTWORU
            WHERE YEAR(ODTWORZENIE.DATA) = 2023 AND ALBUM.DATA_WYDANIA BETWEEN '2000-01-01' AND '2100-01-01'

SELECT * FROM [ODTWORZENIA XX WIEKU] UNION SELECT * FROM [ODTWORZENIA XXI WIEKU]

DROP VIEW [ODTWORZENIA XX WIEKU]
DROP VIEW [ODTWORZENIA XXI WIEKU]

-- 8. Dla każdego instrumentu znajdź wiek jego najmłodszego użytkownika
SELECT INSTRUMENT.NAZWA, MIN(FLOOR(DATEDIFF(DAY, ARTYSTA.DATA_URODZENIA, GETDATE()) / 365.25)) AS WIEK FROM
        ARTYSTA INNER JOIN
            (ARTYSTA_INSTRUMENT INNER JOIN INSTRUMENT ON ARTYSTA_INSTRUMENT.NAZWA = INSTRUMENT.NAZWA)
                ON ARTYSTA.ID = ARTYSTA_INSTRUMENT.ID_A
GROUP BY INSTRUMENT.NAZWA

-- 9. Dla każdego producenta wypisać gatunek, który najczęściej produkuje
CREATE VIEW [ILOSC PRODUKCJI PRODUCENTOW KAZDEGO GATUNKU] (PRODUCENT, GATUNEK, [LICZBA PRODUKCJI]) AS
SELECT PRODUCENT.NAZWA, GATUNEK.NAZWA, COUNT(GATUNEK.NAZWA) FROM
        PRODUCENT INNER JOIN (ALBUM INNER JOIN GATUNEK ON ALBUM.NAZWA_G = GATUNEK.NAZWA)
            ON PRODUCENT.NAZWA = ALBUM.NAZWA_P
GROUP BY PRODUCENT.NAZWA, GATUNEK.NAZWA

SELECT PRODUCENT, MAX(GATUNEK) AS GATUNEK, MAX([LICZBA PRODUKCJI]) AS [LICZBA PRODUKCJI] FROM [ILOSC PRODUKCJI PRODUCENTOW KAZDEGO GATUNKU]
GROUP BY PRODUCENT ORDER BY [LICZBA PRODUKCJI] DESC

DROP VIEW [ILOSC PRODUKCJI PRODUCENTOW KAZDEGO GATUNKU]

/* 10. Wypisz urządzenia oraz ilość odtworzeń na nich wykonanych o ilości odtworzeń
   większej niż tych wykonanych na walkmanie*/
SELECT URZADZENIE, COUNT(ID_ODTWORZENIA) AS [LICZBA ODTWORZEN] FROM ODTWORZENIE
GROUP BY URZADZENIE
HAVING COUNT(ID_ODTWORZENIA) > (SELECT COUNT(ID_ODTWORZENIA) FROM ODTWORZENIE WHERE URZADZENIE='Walkman')
